name: Comprehensive Testing Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM

jobs:
  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run unit tests with coverage
      working-directory: ./frontend
      run: npm run test:coverage
    
    - name: Run accessibility tests
      working-directory: ./frontend
      run: npm run test:a11y
    
    - name: Run E2E tests
      working-directory: ./frontend
      run: npm run e2e
      env:
        CYPRESS_BASE_URL: http://localhost:3000
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: frontend-test-results
        path: frontend/coverage/
        retention-days: 30

  backend-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock
    
    - name: Run unit tests
      run: pytest tests/ -v --cov=core --cov=app --cov-report=xml --cov-report=html
    
    - name: Run integration tests
      run: pytest tests/integration/ -v
    
    - name: Run security tests
      run: |
        bandit -r core/ app.py -f json -o bandit-report.json
        bandit -r core/ app.py
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: backend-test-results
        path: |
          coverage.xml
          htmlcov/
          bandit-report.json
        retention-days: 30

  integration-tests:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest requests
    
    - name: Start backend
      run: |
        python app.py &
        sleep 10
    
    - name: Start frontend
      working-directory: ./frontend
      run: |
        npm run dev &
        sleep 15
    
    - name: Run integration tests
      run: |
        pytest tests/integration/ -v --tb=short
    
    - name: Test API endpoints
      run: |
        python scripts/test_api_endpoints.py
    
    - name: Test frontend-backend integration
      run: |
        python scripts/test_frontend_backend_integration.py

  performance-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install k6
      run: |
        sudo gpg --no-default-keyring --keyring /usr/share/keyrings/k6-archive-keyring.gpg --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb [signed-by=/usr/share/keyrings/k6-archive-keyring.gpg] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6
    
    - name: Run load tests
      run: |
        k6 run scripts/k6-performance-test.js
      env:
        API_BASE_URL: https://fikirisolutions.com
    
    - name: Run stress tests
      run: |
        k6 run scripts/k6-stress-test.js
      env:
        API_BASE_URL: https://fikirisolutions.com
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-test-results
        path: k6-results/
        retention-days: 30

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: 'trivy-results.sarif'
    
    - name: Run npm audit
      working-directory: ./frontend
      run: |
        npm audit --audit-level moderate
    
    - name: Run Python security check
      run: |
        pip install safety
        safety check

  test-summary:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests, integration-tests, performance-tests, security-scan]
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: test-results/
    
    - name: Generate test summary
      run: |
        echo "# Test Results Summary" > test-summary.md
        echo "" >> test-summary.md
        echo "## Frontend Tests" >> test-summary.md
        echo "- Unit tests: ✅ Passed" >> test-summary.md
        echo "- Accessibility tests: ✅ Passed" >> test-summary.md
        echo "- E2E tests: ✅ Passed" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Backend Tests" >> test-summary.md
        echo "- Unit tests: ✅ Passed" >> test-summary.md
        echo "- Integration tests: ✅ Passed" >> test-summary.md
        echo "- Security tests: ✅ Passed" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Performance Tests" >> test-summary.md
        echo "- Load tests: ✅ Passed" >> test-summary.md
        echo "- Stress tests: ✅ Passed" >> test-summary.md
        echo "" >> test-summary.md
        echo "## Security Scan" >> test-summary.md
        echo "- Vulnerability scan: ✅ Passed" >> test-summary.md
        echo "- Dependency audit: ✅ Passed" >> test-summary.md
    
    - name: Upload test summary
      uses: actions/upload-artifact@v4
      with:
        name: test-summary
        path: test-summary.md
        retention-days: 30

