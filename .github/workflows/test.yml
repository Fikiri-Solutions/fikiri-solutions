name: Comprehensive Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: TypeScript type check
      run: |
        cd frontend
        npm run type-check
        
    - name: ESLint code quality check
      run: |
        cd frontend
        npm run lint
        
    - name: Run unit tests
      run: |
        cd frontend
        npm test -- --run --coverage
        
    - name: Build test
      run: |
        cd frontend
        npm run build
        
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage
        
  backend-health:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Backend health check
      run: |
        echo "Testing backend health..."
        curl -f https://fikirisolutions.onrender.com/api/health || exit 1
        
    - name: CRM API test
      run: |
        echo "Testing CRM API endpoint..."
        curl -f https://fikirisolutions.onrender.com/api/crm/leads || exit 1
        
  frontend-deployment:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Frontend deployment check
      run: |
        echo "Testing frontend deployment..."
        curl -f https://fikirisolutions.com || exit 1
        
    - name: Check for latest build
      run: |
        echo "Checking for latest frontend build..."
        BUILD_HASH=$(curl -s https://fikirisolutions.com | grep -o 'index-[a-f0-9]*\.js' | head -1)
        echo "Current build hash: $BUILD_HASH"
        if [ -z "$BUILD_HASH" ]; then
          echo "No build hash found - deployment may be stale"
          exit 1
        fi
        
  integration-test:
    runs-on: ubuntu-latest
    needs: [test, backend-health, frontend-deployment]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run integration tests
      run: |
        echo "Running integration tests..."
        # Test CRM page loads
        curl -s https://fikirisolutions.com/crm | grep -q "CRM" || exit 1
        
        # Test AI Assistant endpoint
        curl -s https://fikirisolutions.onrender.com/api/ai/chat \
          -H "Content-Type: application/json" \
          -d '{"message":"test"}' | grep -q "response" || exit 1
        
        echo "✅ All integration tests passed!"
        
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit
      run: |
        cd frontend
        npm audit --audit-level moderate || true
        
    - name: Check for hardcoded secrets
      run: |
        echo "Checking for hardcoded secrets..."
        if grep -r "password\|secret\|key" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" frontend/src/ | grep -v "test\|mock\|example"; then
          echo "⚠️ Potential hardcoded secrets found"
          exit 1
        else
          echo "✅ No hardcoded secrets found"
        fi
